# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-Left previous-window
bind-key -n M-Right next-window


set -g status 2 ; set -g status-format[1] "Waiting for line2 (src tmux.conf)"
# emoticons
	bind -T root C-u switch-client -T unicodes
	bind -T unicodes p send-keys üçÖ #pomodor indicating around 20 minutes of time
	bind -T unicodes u send-keys üò¨ #something that is not a sure thing
	bind -T unicodes h send-keys ‚ô®Ô∏è  #something that is hot
	bind -T unicodes v send-keys üí¶  #water or something that is wet
	bind -T unicodes c send-keys ‚úî  #checkmark tjek


#n4s bindings 
	bind -T root C-a switch-client -T n4s	#Menuknap
	bind -T n4s p capture-pane -b temp-capture-buffer -S - \; save-buffer -b temp-capture-buffer ~/tmp/screenshot \; delete-buffer -b capture-buffer
	bind -T n4s s send-keys sr Enter	#Skift regnskab
	bind -T n4s v send-keys "l print -S payee>"'$tpath'"/.hl\;hledger-ui -T -f "'$tpath'"/.hl" Enter	# viser regnskab for perioden
	bind -T n4s V send-keys "ll print -S payee>"'$tpath'"/.hl\;hledger-ui -T -f "'$tpath'"/.hl" Enter	# viser regnskab for perioden

	bind -T n4s i send-keys "bash /svn/svnroot/Applications/key_review_unsure.bash" Enter 	# Review unsure stuff
	bind -T n4s ? send-keys "bash /svn/svnroot/Applications/key_help.bash" Enter	#Viser hj√¶lpesk√¶rme
	bind -T n4s t display-popup -E "bash /svn/svnroot/Applications/start.bash igangv"
	bind -T n4s u split-window -v "calcurse"
	bind -T n4s U split-window -h "calcurse"
	bind -T n4s y split-window -v "select_regnskab=1 bash /svn/svnroot/Applications/start.bash igangv"
	bind -T n4s R split-window -v "ranger \"$(find ~/Dropbox/* -type d|fzf)\""

	bind -T n4s T new-window "bash /svn/svnroot/Applications/start.bash igangvbal"
	bind -T n4s i popup "tmux attach -t popup || tmux new -s popup"
	bind-key    -T n4s          c                    display-popup -x R -y S -h 12 -w 45 "tmux attach -t calc || tmux new -s calc"

	bind -T n4s Z new-window "bash /svn/svnroot/Applications/start.bash stuff"
	bind -T n4s z new-window "bash /svn/svnroot/Applications/start.bash stuffbal"
	bind -T n4s w new-window "bash /svn/svnroot/Applications/start.bash watch"
	bind -T n4s p new-window "bash /svn/svnroot/Applications/bfb.bash"
	bind -T n4s P join-pane
	bind -T n4s p capture-pane -b temp-capture-buffer -S - \; save-buffer -b temp-capture-buffer ~/tmp/screenshot \; delete-buffer -b capture-buffer
	bind-key -T n4s p command-prompt -p 'Angiv navn for sk√¶rmdump:' -I '/data/screens/' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

bind -T n4s < split-window -p20 "bash /svn/svnroot/Applications/inputtag.bash"
bind -T n4s > split-window "vi /home/joo/regnskaber/stuff/.tags/inputtag.bash"
	bind -T n4s ! split-window "screen -x"
	bind -T n4s % run-shell "screen -D"


	bind -T n4s a new-window "bash /svn/svnroot/Applications/start.bash anyentry"
	bind -T root C-Y switch-client -T tagz_newwin
	bind -T tagz_newwin 1 new-window bash /svn/svnroot/Applications/start.bash tag idag
	bind -T tagz_newwin ¬Ω new-window bash /svn/svnroot/Applications/start.bash tag quicknotes
	bind -T root F1 run -b "tpath=\$tpath php /svn/svnroot/Applications/tmux/menu.php"
	bind -T root F2 new-window bash /svn/svnroot/Applications/start.bash business
	bind -T root C-F2 split-window "notitle=1 bash /svn/svnroot/Applications/start.bash business" 
	bind -T root S-F2 split-window -h "notitle=1 bash /svn/svnroot/Applications/start.bash business "
	bind -T root C-S-F2 display-popup -E "notitle=1 bash /svn/svnroot/Applications/start.bash business "
	bind -T root F3 run -b "tpath=\$tpath php /svn/svnroot/Applications/tmux/menu.php history"
	bind -T root F4 new-window bash /svn/svnroot/Applications/start.bash regnskab
	bind -T root F5 new-window bash /svn/svnroot/Applications/start.bash mine
	bind -T root F6 new-window bash /svn/svnroot/Applications/start.bash grepsearchtag
	bind -T root F7  new-window bash /svn/svnroot/Applications/start.bash code
	bind -T root F12 new-window bash /svn/svnroot/Applications/fortune.bash
	bind -T root M-F12 new-window bash /svn/svnroot/Applications/fortune.bash hide

# set color for status bar
set-option -g status-style bg=colour235,fg=yellow,dim

# set window title list colors
set-window-option -g window-status-style fg=brightblue,bg=colour239,dim

# a)))ctive window title colors
set-window-option -g window-status-current-style fg=blue,bg=grey,bright


set -g base-index 1
setw -g pane-base-index 1
#set-option status-style fg=white,bg=black


bind-key S capture-pane -b temp-capture-buffer -S - \; save-buffer -b temp-capture-buffer ~/tmp/screenshot \; delete-buffer -b capture-buffer
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
bind-key -n F8 new-window "$tpath/.menu.bash tags"


# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-left '(#S) '
set -g status-right '#[fg=black,bg=white] %Y-%m-%d %h:%m #[fg=colour233,bg=colour8] %H:%M:%S   - #{t/f/%%%%F %%%%T:session_created}'

set -g status-right-length 50
set -g status-left-length 20
set -g mouse on


# List of plugins
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'sainnhe/tmux-fzf'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# set prefix key to ctrl+q
bind -n F8 source ~/.tmux.conf
set -g pane-active-border-style bg=yellow,fg=magenta
set -g pane-border-style fg=blue,bg=gray

set -g pane-border-status bottom

set -g pane-border-format "#{pane_index} #{pane_current_command}"

bind -N 'find pane by title / current command' c-f {
  command-prompt -p '#[fg=red]Find pane by title:#[default]' {
  run -C "menu -x0 -yS -T '[ Matches for #[fg=red]%1#[default] ]' --\
  #{S:#{W:#{P:#{?#{||:#{m:*%1*,#{pane_title}},#{m:*%1*,#{pane_current_command}}},\
  '#[reverse]#{p17:#{=/-14/..:  #{session_name}:#{window_index}.#{pane_index}}}#[default]\
 #{p20:#{pane_current_command}} #[reverse] #{s/#{l:$HOME}/~/:#{pane_current_path}}\
 ' '' 'switch-client -t #{pane_id}',}}}}"
  }
}

set-window-option -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R


set-hook -g session-created "new-window php /svn/svnroot/Applications/tmux/menu.php"


set -s set-clipboard off
set -as terminal-features ',rxvt-unicode-256color:clipboard'
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind-key -T prefix > display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -x P -y P \
  "#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}"  C-r  "copy-mode -t=; send -Xt= search-backward \"#{q:mouse_word}\"" \
  "#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}"        C-y  "send-keys -l -- \"#{q:mouse_word}\""                          \
  "#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}"        c    "set-buffer -- \"#{q:mouse_word}\""                            \
  "#{?mouse_line,Copy Line,}"                                      l    "set-buffer -- \"#{q:mouse_line}\""                            \
  "Horizontal Split"                                               h    "split-window -h"                                              \
  "Vertical Split"                                                 v    "split-window -v"                                              \
  "Swap Up"                                                        u    "swap-pane -U"                                                 \
  "Swap Down"                                                      d    "swap-pane -D"                                                 \
  "#{?pane_marked_set,,-}Swap Marked"                              s     swap-pane                                                     \
  Kill                                                             X     kill-pane                                                     \
  Respawn                                                          R    "respawn-pane -k"                                              \
  "#{?pane_marked,Unmark,Mark}"                                    m    "select-pane -m"                                               \
  "#{?window_zoomed_flag,Unzoom,Zoom}"                             z    "resize-pane -Z"
bind S command-prompt -p "New Session:" "new-session -A -s '%%'"



set-option default-terminal "screen-256color"

